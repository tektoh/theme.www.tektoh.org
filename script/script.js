// Generated by CoffeeScript 1.6.3
$(document).ready(function() {
  $('#btn-navbar').click(function() {
    return $('.navbar-responsive-collapse').collapse('toggle');
  });
  $('.navbar-responsive-collapse').on('show.bs.collapse', function() {
    var $icon;
    $icon = $('.icon-btn-navbar');
    if (!$icon.hasClass('menu-open')) {
      return $icon.addClass('menu-open');
    }
  });
  return $('.navbar-responsive-collapse').on('hide.bs.collapse', function() {
    var $icon;
    $icon = $('.icon-btn-navbar');
    if ($icon.hasClass('menu-open')) {
      return $icon.removeClass('menu-open');
    }
  });
});
// Generated by CoffeeScript 1.6.3
(function($) {
  "use strict";
  return $(document).ready(function() {
    return $('.widget-area').masonry({
      itemSelector: '.widget'
    });
  });
})(window.jQuery);
// Generated by CoffeeScript 1.6.3
(function($) {
  "use strict";
  var Conf, getColumns;
  Conf = {};
  Conf.viewports = {};
  Conf.viewports.thumbnail = [
    {
      width: 1200,
      columns: 6
    }, {
      width: 900,
      columns: 5
    }, {
      width: 500,
      columns: 4
    }, {
      width: 320,
      columns: 3
    }, {
      width: 0,
      columns: 2
    }
  ];
  Conf.viewports.medium = [
    {
      width: 1200,
      columns: 4
    }, {
      width: 900,
      columns: 4
    }, {
      width: 500,
      columns: 3
    }, {
      width: 320,
      columns: 2
    }, {
      width: 0,
      columns: 2
    }
  ];
  Conf.viewports.large = [
    {
      width: 1200,
      columns: 1
    }, {
      width: 900,
      columns: 1
    }, {
      width: 500,
      columns: 1
    }, {
      width: 320,
      columns: 1
    }, {
      width: 0,
      columns: 1
    }
  ];
  getColumns = function(width, size) {
    var columns, viewport, viewports, _i, _len;
    columns = 0;
    if (typeof Conf.viewports[size] !== 'undefined') {
      viewports = Conf.viewports[size];
    } else {
      viewports = Conf.viewports.thumbnail;
    }
    for (_i = 0, _len = viewports.length; _i < _len; _i++) {
      viewport = viewports[_i];
      if (width > viewport.width && viewport.columns > columns) {
        columns = viewport.columns;
      }
    }
    return columns;
  };
  return $(document).ready(function() {
    var resize_func;
    $('.gallery').each(function() {
      return $(this).find('.gallery-item').each(function() {
        return $(this).append('<a href="#"><img /></a>');
      });
    });
    resize_func = function() {
      return $('.gallery').each(function() {
        var $container, columns, container_width, gallerySize, item_width;
        $container = $(this);
        if ($(this).hasClass('gallery-size-large')) {
          gallerySize = 'large';
        } else if ($(this).hasClass('gallery-size-medium')) {
          gallerySize = 'medium';
        } else {
          gallerySize = 'thumbnail';
        }
        container_width = $container.width();
        columns = getColumns(container_width, gallerySize);
        item_width = Math.floor(container_width / columns) - 2;
        $container.find('.gallery-item').each(function() {
          var $a, $img, $item, href, min_width, src, title;
          $item = $(this);
          $item.width("" + item_width + "px");
          $item.css({
            'padding': '1px'
          });
          href = $item.attr('data-href');
          title = $item.attr('data-title');
          src = '#';
          min_width = 99999;
          $item.find('.gallery-image-data').each(function() {
            var $data, data_min_width;
            $data = $(this);
            data_min_width = Number($data.attr('data-min-width'));
            if (typeof data_min_width === 'undefined') {
              data_min_width = 0;
            }
            if (data_min_width >= item_width && min_width > data_min_width) {
              min_width = data_min_width;
              return src = $data.attr('data-src');
            }
          });
          $a = $item.find('a');
          $img = $item.find('img');
          if (!$a.hasClass('thumbnail')) {
            $a.addClass('thumbnail');
          }
          $a.attr('href', href);
          $a.attr('title', title);
          $img.attr('src', src);
          return $img.attr('alt', title);
        });
        return imagesLoaded($container, function() {
          return $container.masonry({
            itemSelector: '.gallery-item'
          });
        });
      });
    };
    $(window).resize(resize_func);
    return setTimeout(resize_func, 0);
  });
})(window.jQuery);
// Generated by CoffeeScript 1.6.3
(function($) {
  "use strict";
  return $(document).ready(function() {
    var resize;
    resize = function() {
      var $element, height;
      height = $(window).height();
      $element = $('img.attachment-image');
      return $element.each(function() {
        return $element.css({
          'max-height': (height - 61 - 60 - 20) + 'px'
        });
      });
    };
    $(window).resize(resize);
    return setTimeout(resize, 0);
  });
})(window.jQuery);
// Generated by CoffeeScript 1.6.3
(function($) {
  return $('a[href^=#]').click(function() {
    var href, position, speed, target;
    speed = 500;
    href = $(this).attr('href');
    if (href === '#' || href === '') {
      target = $('html');
    } else {
      target = $(href);
    }
    position = target.offset().top;
    $('html,body').animate({
      scrollTop: position
    }, speed, 'swing');
    return false;
  });
})(window.jQuery);
